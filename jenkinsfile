pipeline {
    agent any

    environment {
        DOCKER_IMAGE = 'mylaravelapp:latest'
        DOCKER_CREDENTIALS_ID = 'docker-credentials'
    }

    stages {
        stage('Checkout Source Code') {
            steps {
                checkout scm
            }
        }

        stage('Install Composer Dependencies') {
            steps {
                // Using Windows Batch script for composer installation
                bat 'composer install -v'
            }
        }

        stage('Install Node.js Dependencies') {
            steps {
                // Navigate to the project directory and install Node.js dependencies
                bat 'npm install'
            }
        }

        stage('Build Assets') {
            steps {
                // Build the assets to generate the Vite manifest file
                bat 'npm run build'
            }
        }

        stage('Execute PHPUnit Tests') {
            steps {
                // Use phpunit.bat on Windows
                bat 'vendor\\bin\\phpunit.bat --log-junit test-results.xml'
            }
        }

        stage('Publish Test Results') {
            steps {
                // Publish the test results to Jenkins
                junit 'test-results.xml'
            }
        }

        stage('Login to Docker') {
            steps {
                script {
                    withCredentials([usernamePassword(credentialsId: DOCKER_CREDENTIALS_ID, usernameVariable: 'DOCKER_USERNAME', passwordVariable: 'DOCKER_PASSWORD')]) {
                        bat "docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD"
                    }
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    // Build the Docker image using Docker Compose
                    bat "docker-compose build"
                }
            }
        }

        stage('Deploy with Docker Compose') {
            steps {
                script {
                    // Start the containers using Docker Compose
                    bat "docker-compose up -d"
                }
            }
        }
    }

    post {
        always {
            cleanWs()
        }
    }
}
